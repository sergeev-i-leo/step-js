import Component from "./component";
import VirtualElement from "./virtual-element";
type ON_CLICK = (event?: any) => void | false | true;
type ON_DBL_CLICK = (event?: any) => void | false | true;
type ON_KEYDOWN = (event?: any) => void | false | true;
type ON_KEYUP = (event?: any) => void | false | true;
declare class Widget extends Component {
    readonly tagName: string;
    classNames: string[];
    innerHTML: any;
    children: Component[] | undefined;
    constructor(tagName: string, ...params: any);
    hasTextParam(): boolean;
    destroy(): void;
    destroyChildren(): void;
    getClassName(): string;
    hasClassName(className: string): boolean;
    addClassNames(className: string): this;
    removeClassName(className: string): this;
    toggleClassName(className: string): this;
    resetClassName(): this;
    getStyle(): any;
    setStyle(style: Object): this;
    getStyleRule(name: string): any;
    setStyleRule(name: string, value: string): this;
    changeStyleProperty(name: string, value: string): this;
    setInnerText(innerText: string): this;
    setInnerHTML(innerHTML: string): this;
    getChildren(): Component[];
    append(child: any): any;
    createVirtualElement(): VirtualElement;
    addVirtualElementsTo(parentVirtualElement: VirtualElement): void;
    addVirtualElement(parentVirtualElement: VirtualElement, child: any): void;
    onClick: ON_CLICK | undefined;
    onDblClick: ON_DBL_CLICK | undefined;
    onKeydown: ON_KEYDOWN | undefined;
    onKeyup: ON_KEYUP | undefined;
}
export default Widget;
